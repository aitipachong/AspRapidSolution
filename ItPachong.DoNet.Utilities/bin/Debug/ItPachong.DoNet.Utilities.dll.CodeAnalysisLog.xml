<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\bin\Debug\ItPachong.DoNet.Utilities.dll">
   <Modules>
    <Module Name="itpachong.donet.utilities.dll">
     <Namespaces>
      <Namespace Name="ItPachong.DoNet.Utilities.API">
       <Types>
        <Type Name="API" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetComputerName(System.Byte[],System.Int32[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'API.GetComputerName(byte[], int[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'API.GetComputerName(byte[], int[])' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserName(System.Byte[],System.Int32[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'API.GetUserName(byte[], int[])'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'API.GetUserName(byte[], int[])' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GlobalMemoryStatus(ItPachong.DoNet.Utilities.API.API+MEMORY_INFO&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'API.GlobalMemoryStatus(ref API.MEMORY_INFO)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'API.GlobalMemoryStatus(ref API.MEMORY_INFO)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inet_addr(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'API.inet_addr(string)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'API.inet_addr(string)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'ip' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendARP(System.Int32,System.Int32,System.Int64&amp;,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'API.SendARP(int, int, ref long, ref int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'API.SendARP(int, int, ref long, ref int)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MAC+NCB" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnNativeResourcesShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1049" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="CriticalError">在 'MAC.NCB' 上实现 IDisposable。</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ncb_buffer" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">将 'MAC.NCB.ncb_buffer' 设置为私有的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ncb_event" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">将 'MAC.NCB.ncb_event' 设置为私有的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ncb_post" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">将 'MAC.NCB.ncb_post' 设置为私有的。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MAC+Win32API" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Netbios(ItPachong.DoNet.Utilities.API.MAC+NCB&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'MAC.Win32API.Netbios(ref MAC.NCB)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'MAC.Win32API.Netbios(ref MAC.NCB)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Win32" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CloseHandle(System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'Win32.CloseHandle(IntPtr)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateFile(System.String,System.UInt32,System.UInt32,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'Win32.CreateFile(string, uint, uint, IntPtr, uint, uint, IntPtr)'。</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'lpFileName' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeviceIoControl(System.IntPtr,System.UInt32,ItPachong.DoNet.Utilities.API.Win32+SendCmdInParams&amp;,System.UInt32,ItPachong.DoNet.Utilities.API.Win32+SendCmdOutParams&amp;,System.UInt32,System.UInt32&amp;,System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'Win32.DeviceIoControl(IntPtr, uint, ref Win32.SendCmdInParams, uint, ref Win32.SendCmdOutParams, uint, ref uint, IntPtr)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeviceIoControl(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,ItPachong.DoNet.Utilities.API.Win32+GetVersionOutParams&amp;,System.UInt32,System.UInt32&amp;,System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'Win32.DeviceIoControl(IntPtr, uint, IntPtr, uint, ref Win32.GetVersionOutParams, uint, ref uint, IntPtr)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDeviceCaps(System.Runtime.InteropServices.HandleRef,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'Win32.GetDeviceCaps(HandleRef, int)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'Win32.GetDeviceCaps(HandleRef, int)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMenuItemCount(System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'Win32.GetMenuItemCount(IntPtr)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSystemMenu(System.IntPtr,System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'Win32.GetSystemMenu(IntPtr, bool)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveMenu(System.IntPtr,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'Win32.RemoveMenu(IntPtr, int, int)'。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScrollWindow(System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32,ItPachong.DoNet.Utilities.API.Win32+RECT&amp;,ItPachong.DoNet.Utilities.API.Win32+RECT&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'Win32.ScrollWindow(HandleRef, int, int, ref Win32.RECT, ref Win32.RECT)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'Win32.ScrollWindow(HandleRef, int, int, ref Win32.RECT, ref Win32.RECT)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetScrollInfo(System.Runtime.InteropServices.HandleRef,System.Int32,ItPachong.DoNet.Utilities.API.Win32+SCROLLINFO,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'Win32.SetScrollInfo(HandleRef, int, Win32.SCROLLINFO, bool)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'Win32.SetScrollInfo(HandleRef, int, Win32.SCROLLINFO, bool)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetScrollPos(System.Runtime.InteropServices.HandleRef,System.Int32,System.Int32,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'Win32.SetScrollPos(HandleRef, int, int, bool)'。</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">更改 P/Invoke 'Win32.SetScrollPos(HandleRef, int, int, bool)' 的可访问性，使它在自己的程序集外部不再是可见的。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ItPachong.DoNet.Utilities.Chart">
       <Types>
        <Type Name="OWCChart11" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Create()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Chart" File="OWCChart11.cs" Line="617">'OWCChart11.Create()' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ItPachong.DoNet.Utilities.Config">
       <Types>
        <Type Name="ConfigHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetConfigDecimal(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Config" File="ConfigHelper.cs" Line="120">'ConfigHelper.GetConfigDecimal(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetConfigInt(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Config" File="ConfigHelper.cs" Line="144">'ConfigHelper.GetConfigInt(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetConfigString(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Config" File="ConfigHelper.cs" Line="48">'ConfigHelper.GetConfigString(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetConfigStringArr(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Config" File="ConfigHelper.cs" Line="81">'ConfigHelper.GetConfigStringArr(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ItPachong.DoNet.Utilities.Cookie_Session_Cache">
       <Types>
        <Type Name="CacheHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RemoveManagersAllCache()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Cookie_Session_Cache" File="CacheHelper.cs" Line="122">'CacheHelper.RemoveManagersAllCache()' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ItPachong.DoNet.Utilities.CSV">
       <Types>
        <Type Name="CsvHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Csv2Dt(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\CSV" File="CsvHelper.cs" Line="113">'CsvHelper.Csv2Dt(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ItPachong.DoNet.Utilities.DataBase">
       <Types>
        <Type Name="DbHelperMySQL" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="470">'DbHelperMySQL.ExecuteReader(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="463">传递给 'DbHelperMySQL.ExecuteReader(string)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="800">'DbHelperMySQL.ExecuteReader(string, params MySqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="115">'DbHelperMySQL.ExecuteSql(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="118">可以在方法 'DbHelperMySQL.ExecuteSql(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 118</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="107">传递给 'DbHelperMySQL.ExecuteSql(string)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="543">'DbHelperMySQL.ExecuteSql(string, params MySqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="314">'DbHelperMySQL.ExecuteSql(string, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="322">可以在方法 'DbHelperMySQL.ExecuteSql(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 322</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="304">传递给 'DbHelperMySQL.ExecuteSql(string, string)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlByTime(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="143">'DbHelperMySQL.ExecuteSqlByTime(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="146">可以在方法 'DbHelperMySQL.ExecuteSqlByTime(string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 146</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="134">传递给 'DbHelperMySQL.ExecuteSqlByTime(string, int)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlGet(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="352">'DbHelperMySQL.ExecuteSqlGet(string, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="360">可以在方法 'DbHelperMySQL.ExecuteSqlGet(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 360</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="335">传递给 'DbHelperMySQL.ExecuteSqlGet(string, string)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlInsertImg(System.String,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="383">'DbHelperMySQL.ExecuteSqlInsertImg(string, byte[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="391">可以在方法 'DbHelperMySQL.ExecuteSqlInsertImg(string, byte[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 391</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="373">传递给 'DbHelperMySQL.ExecuteSqlInsertImg(string, byte[])' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;ItPachong.DoNet.Utilities.DataBase.CommandInfo&gt;,System.Collections.Generic.List`1&lt;ItPachong.DoNet.Utilities.DataBase.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="247">'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="252">'DbHelperMySQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="280">传递给 'DbHelperMySQL.ExecuteSqlTran(List&lt;string&gt;)' 中的 'MySqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'SQLStringList[n]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="419">'DbHelperMySQL.GetSingle(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="422">可以在方法 'DbHelperMySQL.GetSingle(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 422</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="404">传递给 'DbHelperMySQL.GetSingle(string)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="776">'DbHelperMySQL.GetSingle(string, params MySqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="447">'DbHelperMySQL.GetSingle(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="450">可以在方法 'DbHelperMySQL.GetSingle(string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 450</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="431">传递给 'DbHelperMySQL.GetSingle(string, int)' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(MySql.Data.MySqlClient.MySqlCommand,MySql.Data.MySqlClient.MySqlConnection,MySql.Data.MySqlClient.MySqlTransaction,System.String,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="846">传递给 'DbHelperMySQL.PrepareCommand(MySqlCommand, MySqlConnection, MySqlTransaction, string, MySqlParameter[])' 中的 'MySqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="489">传递给 'DbHelperMySQL.Query(string)' 中的 'MySqlDataAdapter.MySqlDataAdapter(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperMySQL.cs" Line="507">传递给 'DbHelperMySQL.Query(string, int)' 中的 'MySqlDataAdapter.MySqlDataAdapter(string, MySqlConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DbHelperOleDb" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="248">传递给 'DbHelperOleDb.ExecuteReader(string)' 中的 'OleDbCommand.OleDbCommand(string, OleDbConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="106">可以在方法 'DbHelperOleDb.ExecuteSql(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 106</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="95">传递给 'DbHelperOleDb.ExecuteSql(string)' 中的 'OleDbCommand.OleDbCommand(string, OleDbConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="173">可以在方法 'DbHelperOleDb.ExecuteSql(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 173</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="155">传递给 'DbHelperOleDb.ExecuteSql(string, string)' 中的 'OleDbCommand.OleDbCommand(string, OleDbConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlInsertImg(System.String,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="204">可以在方法 'DbHelperOleDb.ExecuteSqlInsertImg(string, byte[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 204</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="186">传递给 'DbHelperOleDb.ExecuteSqlInsertImg(string, byte[])' 中的 'OleDbCommand.OleDbCommand(string, OleDbConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.ArrayList)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="132">传递给 'DbHelperOleDb.ExecuteSqlTran(ArrayList)' 中的 'OleDbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'SQLStringList[n]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="235">可以在方法 'DbHelperOleDb.GetSingle(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 235</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="217">传递给 'DbHelperOleDb.GetSingle(string)' 中的 'OleDbCommand.OleDbCommand(string, OleDbConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.OleDb.OleDbCommand,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction,System.String,System.Data.OleDb.OleDbParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="443">传递给 'DbHelperOleDb.PrepareCommand(OleDbCommand, OleDbConnection, OleDbTransaction, string, OleDbParameter[])' 中的 'OleDbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOleDb.cs" Line="274">传递给 'DbHelperOleDb.Query(string)' 中的 'OleDbDataAdapter.OleDbDataAdapter(string, OleDbConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DbHelperOra" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuildQueryCommand(System.Data.OracleClient.OracleConnection,System.String,System.Data.IDataParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="632">传递给 'DbHelperOra.BuildQueryCommand(OracleConnection, string, IDataParameter[])' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'storedProcName'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="295">传递给 'DbHelperOra.ExecuteReader(string)' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="115">可以在方法 'DbHelperOra.ExecuteSql(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 115</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="102">传递给 'DbHelperOra.ExecuteSql(string)' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="198">可以在方法 'DbHelperOra.ExecuteSql(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 198</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="178">传递给 'DbHelperOra.ExecuteSql(string, string)' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlInsertImg(System.String,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="237">可以在方法 'DbHelperOra.ExecuteSqlInsertImg(string, byte[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 237</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="217">传递给 'DbHelperOra.ExecuteSqlInsertImg(string, byte[])' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.ArrayList)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="149">传递给 'DbHelperOra.ExecuteSqlTran(ArrayList)' 中的 'OracleCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'SQLStringList[n]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="276">可以在方法 'DbHelperOra.GetSingle(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 276</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="256">传递给 'DbHelperOra.GetSingle(string)' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.OracleClient.OracleCommand,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="548">传递给 'DbHelperOra.PrepareCommand(OracleCommand, OracleConnection, OracleTransaction, string, OracleParameter[])' 中的 'OracleCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="329">传递给 'DbHelperOra.Query(string)' 中的 'OracleDataAdapter.OracleDataAdapter(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[],System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperOra.cs" Line="612">可以在方法 'DbHelperOra.RunProcedure(string, IDataParameter[], string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 612</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DbHelperSQL" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuildQueryCommand(System.Data.SqlClient.SqlConnection,System.String,System.Data.IDataParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="957">传递给 'DbHelperSQL.BuildQueryCommand(SqlConnection, string, IDataParameter[])' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'storedProcName'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExcuteSqlGet(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="404">'DbHelperSQL.ExcuteSqlGet(string, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="412">可以在方法 'DbHelperSQL.ExcuteSqlGet(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 412</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="387">传递给 'DbHelperSQL.ExcuteSqlGet(string, string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'sqlString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="565">'DbHelperSQL.ExecuteReader(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="558">传递给 'DbHelperSQL.ExecuteReader(string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="850">'DbHelperSQL.ExecuteReader(string, params SqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="168">'DbHelperSQL.ExecuteSql(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="171">可以在方法 'DbHelperSQL.ExecuteSql(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 171</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="160">传递给 'DbHelperSQL.ExecuteSql(string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'sqlString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="638">'DbHelperSQL.ExecuteSql(string, params SqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="365">'DbHelperSQL.ExecuteSql(string, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="373">可以在方法 'DbHelperSQL.ExecuteSql(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 373</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="355">传递给 'DbHelperSQL.ExecuteSql(string, string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'sqlString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlByTime(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="196">'DbHelperSQL.ExecuteSqlByTime(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="199">可以在方法 'DbHelperSQL.ExecuteSqlByTime(string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 199</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="187">传递给 'DbHelperSQL.ExecuteSqlByTime(string, int)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'sqlString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlInsertImg(System.String,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="436">'DbHelperSQL.ExecuteSqlInsertImg(string, byte[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="444">可以在方法 'DbHelperSQL.ExecuteSqlInsertImg(string, byte[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 444</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="426">传递给 'DbHelperSQL.ExecuteSqlInsertImg(string, byte[])' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;ItPachong.DoNet.Utilities.DataBase.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="741">'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;ItPachong.DoNet.Utilities.DataBase.CommandInfo&gt;,System.Collections.Generic.List`1&lt;ItPachong.DoNet.Utilities.DataBase.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="295">'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="300">'DbHelperSQL.ExecuteSqlTran(List&lt;CommandInfo&gt;, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="330">传递给 'DbHelperSQL.ExecuteSqlTran(List&lt;string&gt;)' 中的 'SqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'sqlStringList[i]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.Hashtable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="671">'DbHelperSQL.ExecuteSqlTran(Hashtable)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTranWithIndentity(System.Collections.Generic.List`1&lt;ItPachong.DoNet.Utilities.DataBase.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="786">'DbHelperSQL.ExecuteSqlTranWithIndentity(List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTranWithIndentity(System.Collections.Hashtable)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="830">'DbHelperSQL.ExecuteSqlTranWithIndentity(Hashtable)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="472">'DbHelperSQL.GetSingle(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="475">可以在方法 'DbHelperSQL.GetSingle(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 475</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="457">传递给 'DbHelperSQL.GetSingle(string)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'sqlString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="542">'DbHelperSQL.GetSingle(string, params SqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="526">传递给 'DbHelperSQL.GetSingle(string, params SqlParameter[])' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'sqlString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="507">'DbHelperSQL.GetSingle(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="510">可以在方法 'DbHelperSQL.GetSingle(string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 510</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="491">传递给 'DbHelperSQL.GetSingle(string, int)' 中的 'SqlCommand.SqlCommand(string, SqlConnection)' 的查询字符串可能包含以下变量 'sqlString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="883">传递给 'DbHelperSQL.PrepareCommand(SqlCommand, SqlConnection, SqlTransaction, string, SqlParameter[])' 中的 'SqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="587">'DbHelperSQL.Query(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="584">传递给 'DbHelperSQL.Query(string)' 中的 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' 的查询字符串可能包含以下变量 'sqlString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="607">'DbHelperSQL.Query(string, int)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="603">传递给 'DbHelperSQL.Query(string, int)' 中的 'SqlDataAdapter.SqlDataAdapter(string, SqlConnection)' 的查询字符串可能包含以下变量 'sqlString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[],System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="929">可以在方法 'DbHelperSQL.RunProcedure(string, IDataParameter[], string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 929</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunProcedure(System.String,System.Data.IDataParameter[],System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQL.cs" Line="944">可以在方法 'DbHelperSQL.RunProcedure(string, IDataParameter[], string, int)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 944</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DbHelperSQLite" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="249">传递给 'DbHelperSQLite.ExecuteReader(string)' 中的 'SQLiteCommand.SQLiteCommand(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="107">可以在方法 'DbHelperSQLite.ExecuteSql(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 107</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="96">传递给 'DbHelperSQLite.ExecuteSql(string)' 中的 'SQLiteCommand.SQLiteCommand(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSql(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="174">可以在方法 'DbHelperSQLite.ExecuteSql(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 174</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="156">传递给 'DbHelperSQLite.ExecuteSql(string, string)' 中的 'SQLiteCommand.SQLiteCommand(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlInsertImg(System.String,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="205">可以在方法 'DbHelperSQLite.ExecuteSqlInsertImg(string, byte[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 205</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="187">传递给 'DbHelperSQLite.ExecuteSqlInsertImg(string, byte[])' 中的 'SQLiteCommand.SQLiteCommand(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'strSQL'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.Collections.ArrayList)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="133">传递给 'DbHelperSQLite.ExecuteSqlTran(ArrayList)' 中的 'SQLiteCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'SQLStringList[n]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="236">可以在方法 'DbHelperSQLite.GetSingle(string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 236</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="218">传递给 'DbHelperSQLite.GetSingle(string)' 中的 'SQLiteCommand.SQLiteCommand(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.SQLite.SQLiteCommand,System.Data.SQLite.SQLiteConnection,System.Data.SQLite.SQLiteTransaction,System.String,System.Data.SQLite.SQLiteParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="444">传递给 'DbHelperSQLite.PrepareCommand(SQLiteCommand, SQLiteConnection, SQLiteTransaction, string, SQLiteParameter[])' 中的 'SQLiteCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="DbHelperSQLite.cs" Line="275">传递给 'DbHelperSQLite.Query(string)' 中的 'SQLiteDataAdapter.SQLiteDataAdapter(string, SQLiteConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="58">可以在方法 'OracleHelper.ExecuteNonQuery(string, CommandType, string, params OracleParameter[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 58</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.String,System.Collections.Generic.List`1&lt;ItPachong.DoNet.Utilities.DataBase.CommandInfo&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="618">'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="629">可以在方法 'OracleHelper.ExecuteSqlTran(string, List&lt;CommandInfo&gt;)' 中多次释放对象 'conn'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 629</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="675">可以在方法 'OracleHelper.ExecuteSqlTran(string, List&lt;string&gt;)' 中多次释放对象 'conn'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 675</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="657">传递给 'OracleHelper.ExecuteSqlTran(string, List&lt;string&gt;)' 中的 'OracleCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'sql'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSingle(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="211">可以在方法 'OracleHelper.GetSingle(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 211</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="184">传递给 'OracleHelper.GetSingle(string, string)' 中的 'OracleCommand.OracleCommand(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.OracleClient.OracleCommand,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction,System.Data.CommandType,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="507">传递给 'OracleHelper.PrepareCommand(OracleCommand, OracleConnection, OracleTransaction, CommandType, string, OracleParameter[])' 中的 'OracleCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(System.Data.OracleClient.OracleCommand,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="151">传递给 'OracleHelper.PrepareCommand(OracleCommand, OracleConnection, OracleTransaction, string, OracleParameter[])' 中的 'OracleCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="96">可以在方法 'OracleHelper.Query(string, string)' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 96</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="80">传递给 'OracleHelper.Query(string, string)' 中的 'OracleDataAdapter.OracleDataAdapter(string, OracleConnection)' 的查询字符串可能包含以下变量 'SQLString'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Query(System.String,System.String,System.Data.OracleClient.OracleParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="OracleHelper.cs" Line="137">可以在方法 'OracleHelper.Query(string, string, params OracleParameter[])' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 137</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SQLHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase" File="SQLHelper.cs" Line="177">传递给 'SQLHelper.PrepareCommand(SqlCommand, SqlConnection, SqlTransaction, CommandType, string, SqlParameter[])' 中的 'SqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ItPachong.DoNet.Utilities.DataBase.Operate">
       <Types>
        <Type Name="DataTableHelper`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetFilterData(System.Data.DataTable,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase\Operate" File="DataTableHelper.cs" Line="450">'DataTableHelper&lt;T&gt;.GetFilterData(DataTable, string, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectDataTableContents(System.Data.DataTable,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase\Operate" File="DataTableHelper.cs" Line="151">'DataTableHelper&lt;T&gt;.SelectDataTableContents(DataTable, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteDataTableToXml(System.Data.DataTable,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DataBase\Operate" File="DataTableHelper.cs" Line="128">'DataTableHelper&lt;T&gt;.WriteDataTableToXml(DataTable, string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ItPachong.DoNet.Utilities.DEncrypt">
       <Types>
        <Type Name="MySecurity" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DecodeBase64(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DEncrypt" File="MySecurity.cs" Line="409">'MySecurity.DecodeBase64(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DecryptFile(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DEncrypt" File="MySecurity.cs" Line="252">可以在方法 'MySecurity.DecryptFile(string, string, string)' 中多次释放对象 'ms'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 252</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncodeBase64(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DEncrypt" File="MySecurity.cs" Line="350">'MySecurity.EncodeBase64(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncryptFile(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DEncrypt" File="MySecurity.cs" Line="208">可以在方法 'MySecurity.EncryptFile(string, string, string)' 中多次释放对象 'ms'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 208</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncryptString(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\DEncrypt" File="MySecurity.cs" Line="104">可以在方法 'MySecurity.EncryptString(string, string)' 中多次释放对象 'ms'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 104</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ItPachong.DoNet.Utilities.Download_Up">
       <Types>
        <Type Name="DownloadHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ResponseFile(System.Web.HttpRequest,System.Web.HttpResponse,System.String,System.String,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Download_Up" File="DownloadHelper.cs" Line="97">可以在方法 'DownloadHelper.ResponseFile(HttpRequest, HttpResponse, string, string, long)' 中多次释放对象 'myFile'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 97</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ItPachong.DoNet.Utilities.Excel">
       <Types>
        <Type Name="ExcelHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DataTable2Excel(System.Data.DataTable,System.String,ItPachong.DoNet.Utilities.Excel.ExcelHelper+ExcelType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Excel" File="ExcelHelper.cs" Line="543">'ExcelHelper.DataTable2Excel(DataTable, string, ExcelHelper.ExcelType)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Excel" File="ExcelHelper.cs" Line="551">可以在方法 'ExcelHelper.DataTable2Excel(DataTable, string, ExcelHelper.ExcelType)' 中多次释放对象 'oleDbConn'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 551</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Excel" File="ExcelHelper.cs" Line="522">传递给 'ExcelHelper.DataTable2Excel(DataTable, string, ExcelHelper.ExcelType)' 中的 'OleDbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'dataTable.TableName', 'dataTable.Columns[i].Caption', 'dataTable.Columns[i].Caption'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Excel" File="ExcelHelper.cs" Line="539">传递给 'ExcelHelper.DataTable2Excel(DataTable, string, ExcelHelper.ExcelType)' 中的 'OleDbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'dataTable.TableName', 'dataTable.Rows[i][j]', 'dataTable.Rows[i][j]'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Excel2DataSet(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Excel" File="ExcelHelper.cs" Line="319">传递给 'ExcelHelper.Excel2DataSet(string)' 中的 'OleDbDataAdapter.OleDbDataAdapter(string, OleDbConnection)' 的查询字符串可能包含以下变量 'tableName'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Excel2DataSet(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Excel" File="ExcelHelper.cs" Line="284">传递给 'ExcelHelper.Excel2DataSet(string, string)' 中的 'OleDbDataAdapter.OleDbDataAdapter(string, OleDbConnection)' 的查询字符串可能包含以下变量 'tableName'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReaderSchema(System.String,System.Data.OleDb.OleDbConnection)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Excel" File="ExcelHelper.cs" Line="239">传递给 'ExcelHelper.GetReaderSchema(string, OleDbConnection)' 中的 'OleDbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'tableName'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WebExportExcel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GridViewExportToExcel(System.Web.UI.WebControls.GridView)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\Excel" File="WebExportExcel.cs" Line="94">'WebExportExcel.GridViewExportToExcel(GridView)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ItPachong.DoNet.Utilities.File">
       <Types>
        <Type Name="DirFileHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateFile(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="DirFileHelper.cs" Line="570">'DirFileHelper.CreateFile(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateFile(System.String,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="DirFileHelper.cs" Line="602">'DirFileHelper.CreateFile(string, byte[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDirectories(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="DirFileHelper.cs" Line="85">'DirFileHelper.GetDirectories(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDirectories(System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="DirFileHelper.cs" Line="661">'DirFileHelper.GetDirectories(string, string, bool)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFileNames(System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="DirFileHelper.cs" Line="119">'DirFileHelper.GetFileNames(string, string, bool)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileOperateHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AppendFile(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="FileOperateHelper.cs" Line="247">可以在方法 'FileOperateHelper.AppendFile(string, string)' 中多次释放对象 'fs'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 247</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FileAdd(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="FileOperateHelper.cs" Line="227">可以在方法 'FileOperateHelper.FileAdd(string, string)' 中多次释放对象 'sw'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 227</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadFile(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="FileOperateHelper.cs" Line="199">可以在方法 'FileOperateHelper.ReadFile(string)' 中多次释放对象 'f2'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 199</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadTxt(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="FileOperateHelper.cs" Line="107">可以在方法 'FileOperateHelper.ReadTxt(string)' 中多次释放对象 'sr'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 107</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteFile(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="FileOperateHelper.cs" Line="164">可以在方法 'FileOperateHelper.WriteFile(string, string)' 中多次释放对象 'f'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 164</Issue>
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="FileOperateHelper.cs" Line="169">可以在方法 'FileOperateHelper.WriteFile(string, string)' 中多次释放对象 'f2'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 169</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteTxt(System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\STUDY\NET_STUDY\DevelopmentFramework\AspRapidSolution\ItPachong.RapidSolution\ItPachong.DoNet.Utilities\File" File="FileOperateHelper.cs" Line="45">可以在方法 'FileOperateHelper.WriteTxt(string, string)' 中多次释放对象 'sw'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 45</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="INIFileHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetPrivateProfileString(System.String,System.String,System.String,System.Byte[],System.Int32,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'INIFileHelper.GetPrivateProfileString(string, string, string, byte[], int, string)'。</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'section' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'key' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="2" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'defVal' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="5" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'filePath' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'INIFileHelper.GetPrivateProfileString(string, string, string, StringBuilder, int, string)'。</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'section' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'key' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="2" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'def' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="3" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'retVal' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="5" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'filePath' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WritePrivateProfileString(System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 'INIFileHelper.WritePrivateProfileString(string, string, string, string)'。</Issue>
            </Message>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'INIFileHelper.WritePrivateProfileString(string, string, string, string)' 的返回类型在 32 位 平台上的字节宽度将为 8。这是不正确的，因为此 API 的实际本机声明表明该返回类型在 32 位 平台上的字节宽度应为 4。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'long'。</Issue>
             <Issue Name="Return" Certainty="95" Level="Error">如代码中所声明的，P/Invoke 'INIFileHelper.WritePrivateProfileString(string, string, string, string)' 的返回类型在 64 位 平台上的字节宽度将为 8。这是不正确的，因为此 API 的实际本机声明表明该返回类型在 64 位 平台上的字节宽度应为 4。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 'long'。</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'section' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'key' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="2" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'val' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
            <Message Id="3" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2017-06-07 02:44:31Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">为了降低安全风险，请将参数 'filePath' 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>将 P/Invoke 移动到 NativeMethods 类</Name>
   <Description>此类型包含具有 DllImport 特性的成员。具有 DllImport 特性的成员应包含在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中。</Description>
   <Resolution Name="Default">由于是 P/Invoke 方法，因此，应在名为 NativeMethods、SafeNativeMethods 或 UnsafeNativeMethods 的类中定义 {0}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
   <Name>P/Invoke 声明应为可移植声明</Name>
   <Description>.</Description>
   <Resolution Name="Return">如代码中所声明的，P/Invoke {0} 的返回类型在 {2} 平台上的字节宽度将为 {1}。这是不正确的，因为此 API 的实际本机声明表明该返回类型在 {2} 平台上的字节宽度应为 {3}。请参考 MSDN Platform SDK 文档来获取帮助，确定应使用哪种数据类型来代替 {4}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182284(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="portabilityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401">
   <Name>P/Invokes 应该是不可见的</Name>
   <Description>互操作层不应该是公共的。DllImport 特性不应该应用于可公开访问的成员(公共成员或受保护的成员)。</Description>
   <Resolution Name="Default">更改 P/Invoke {0} 的可访问性，使它在自己的程序集外部不再是可见的。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182209.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111">
   <Name>指针应为不可见</Name>
   <Description>应将 IntPtr 和 UIntPtr 字段声明为私有。公开非私有指针可能会导致安全漏洞。</Description>
   <Resolution Name="Default">将 {0} 设置为私有的。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182306.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalError</MessageLevel>
   <File Name="securityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>再次引发以保留堆栈详细信息</Name>
   <Description>重复引发捕获的异常时，请使用 IL 再次引发指令保留原始堆栈详细信息。</Description>
   <Resolution Name="Default">{0} 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>指定对 P/Invoke 字符串参数进行封送处理</Name>
   <Description>在将字符串封送为 ANSI (在 Win9x 上为 Auto)时，某些字符可能会改变。如果启用了最佳匹配映射，则采用 Unicode 编码时显示样式不同的字符串将封送到相同的 ANSI 字符串，这可能会导致错误的安全决策。禁用最佳匹配映射会降低此风险，因为所有没有等效项的字符都将映射到“?”。另外，请注意，CharSet.Ansi 是所有字符串的默认封送设置；Unicode 封送必须显式指定为 DllImport 或 StructLayout 的 CharSet 设置，或者指定为具有 Unicode (或与系统相关的) UnmanagedType 的 MarshalAs 特性。</Description>
   <Resolution Name="ParameterImplicitAnsi">为了降低安全风险，请将参数 {0} 封送为 Unicode，方法是将 DllImport.CharSet 设置为 CharSet.Unicode，或者将该参数显式封送为 UnmanagedType.LPWStr。如果您需要将该字符串封送为 ANSI 或者与系统相关的编码，请显式指定 MarshalAs，并设置 BestFitMapping=false；为了提高安全性，还应设置 ThrowOnUnmappableChar=true。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnNativeResourcesShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1049">
   <Name>拥有本机资源的类型应是可释放的</Name>
   <Description>分配非托管资源的类型应实现 IDisposable，以便允许调用方根据需要释放这些资源。如果不能实现 IDisposable，则将导致非托管资源不可用或利用不足。</Description>
   <Resolution Name="Default">在 {0} 上实现 IDisposable。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182173.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>不要多次释放对象</Name>
   <Description>可以多次调用正确实现的 Dispose 方法，而不会引发异常。但是，并不保证所有情况下都会如此。若要避免生成 System.ObjectDisposedException，您不应对一个对象多次调用 Dispose。</Description>
   <Resolution Name="Default">可以在方法 {1} 中多次释放对象 {0}。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 675</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100">
   <Name>检查 SQL 查询是否存在安全漏洞</Name>
   <Description>通过用户输入生成的 SQL 命令字符串容易受到 SQL 注入式攻击。Microsoft SQL Server 和其他数据库服务器支持存储过程和参数化 SQL 查询，这将降低受到注入式攻击的风险。</Description>
   <Resolution Name="WithNonLiterals">传递给 {1} 中的 {0} 的查询字符串可能包含以下变量 {2}。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">类别</String>
  <String Key="Certainty">确定性</String>
  <String Key="CollapseAll">全部折叠</String>
  <String Key="CheckId">检查 ID</String>
  <String Key="Error">错误</String>
  <String Key="Errors">错误</String>
  <String Key="ExpandAll">全部展开</String>
  <String Key="Help">帮助</String>
  <String Key="Line">行</String>
  <String Key="Messages">消息</String>
  <String Key="LocationNotStoredInPdb">[位置未存储在 Pdb 中]</String>
  <String Key="Project">项目</String>
  <String Key="Resolution">解析</String>
  <String Key="Rule">规则</String>
  <String Key="RuleFile">规则文件</String>
  <String Key="RuleDescription">规则说明</String>
  <String Key="Source">源</String>
  <String Key="Status">状态</String>
  <String Key="Target">目标</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">代码分析报告</String>
 </Localized>
</FxCopReport>
